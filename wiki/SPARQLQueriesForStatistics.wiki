#summary Collection of SPARQL queries for computing voiD statistics

= Introduction =

This page collects SPARQL queries for computing various statistics that can be expressed using the voiD vocabulary.

= Expressible statistics =

Here are some candidates that we would like to be able to express using voiD and that can be translated as SPARQL queries. Note, the assumption is that it's going to be SPARQL 1.1. For a void:Dataset, we would like to express:
  * total number of triples
  * total number of distinct URIs
  * total number of distinct subject nodes
  * total number of distinct object nodes
  * exhaustive list of classes used in the dataset @@J: this and the following are not numbers
  * exhaustive list of properties used in the dataset
  * table: class vs. total number of instances of the class
  * table: property vs. total number of triples using the property
  * table: property vs. total number of distinct subjects in triples using the prop
  * table: property vs. total number of distinct objects in triples using the prop
  * list of all domain names occurring in URIs in subjects or objects
  * table: domain names vs. number of triples where the domain name occurs in subject or object

= SPARQL queries =

== total number of triples ==
{{{
SELECT (COUNT(*) AS ?no) { ?s ?p ?o  }
}}}

== total number of distinct URIs ==
{{{
SELECT (COUNT(DISTINCT ?s ) AS ?no) { { ?s ?p ?o  } UNION { ?o ?p ?s } } 
}}}
Does this take into account URIs vs. blank nodes?
@@J: how about the predicates? 

== total number of distinct subject nodes ==
{{{
SELECT (COUNT(DISTINCT ?s ) AS ?no) {  ?s ?p ?o   } 
}}}

== total number of distinct object nodes ==
{{{
SELECT (COUNT(DISTINCT ?o ) AS ?no) {  ?s ?p ?o   } 
}}}

== exhaustive list of classes used in the dataset ==
{{{
SELECT DISTINCT ?type { ?s rdf:type ?type }
}}}

@@J: better if a graph URI is given; otherwise all the Openlink's classes are also returned.

== exhaustive list of properties used in the dataset ==
{{{
SELECT DISTINCT ?p { ?s ?p ?o }
}}}

== table: class vs. total number of instances of the class ==
{{{
SELECT  ?class (COUNT(?s) AS ?count ) { ?s a ?class } GROUP BY ?class
}}}

== table: property vs. total number of triples using the property ==
{{{
SELECT  ?p (COUNT(?s) AS ?count ) { ?s ?p ?o } GROUP BY ?p
}}}

== table: property vs. total number of distinct subjects in triples using the property ==
{{{
SELECT  ?p (COUNT(DISTINCT ?s ) AS ?count ) { ?s ?p ?o } GROUP BY ?p
}}}

== table: property vs. total number of distinct objects in triples using the property ==
{{{
SELECT  ?p (COUNT(DISTINCT ?o ) AS ?count ) { ?s ?p ?o } GROUP BY ?p
}}}

== list of all domain names occurring in URIs in subjects or objects ==
@@@

== table: domain names vs. number of triples where the domain name occurs in subject or object ==
@@@